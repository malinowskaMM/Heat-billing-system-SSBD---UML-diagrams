@startuml
  left to right direction
  package pl.lodz.p.it.ssbd2023.ssbd03.entities.mow {
  Owner "1" -- "many" HotWaterEntry
  Manager "1" -- "many" HotWaterEntry
  Manager "many" -- "1" HeatDistributionCentrePayoff
  Building "1" *-- "many" Place
  Place "1" -- "many" MonthPayoff
  Place "many" -- "1" Account
  Place "1" -- "many" Advance
  Place "1" -- "many" AnnualBalance
  Place "1" -- "many" HotWaterEntry
  Advance  <|--  HotWaterAdvance
  Advance <|--  HeatingPlaceAndCommunalAreaAdvance
  MonthPayoff "many" -- "1" Account
  PastQuarterHotWaterPayoff "1" -- "1" Place
  Account <|-- Owner
  Account <|-- Manager
  HeatDistributionCentre "1" -- "many" HeatDistributionCentrePayoff
  HeatDistributionCentre "1" o-- "many" Building
  Building "1" *-- "1" Address
  
class HeatDistributionCentre {
- id: Integer

+ addBuilding(building: Building): void
}

class HeatDistributionCentrePayoff {
- id: Integer
- date: LocalDate
- consumption: BigDecimal
- consumptionCost: BigDecimal
- heatingAreaFactor: BigDecimal

+ getId(): Integer
+ getDate(): LocalDate
+ getConsumption(): BigDecimal
+ getConsumptionCost(): BigDecimal
+ getHeatingAreaFactor(): BigDecimal
}

  class PastQuarterHotWaterPayoff {
- id: Integer
- averageConsumption: BigDecimal
- daysNumberInQuarter: Integer

+ getId(): Integer
+ getAverageConsumption(): BigDecimal
+ getDaysNumberInQuarter(): Integer

+ setAverageConsumption(consumption: BigDecimal): void
+ setDaysNumberInQuarter(daysNumber: Integer): void
}

class Building {
- id: Integer
- totalArea: BigDecimal
- communalAreaAggregate: BigDecimal
- address: String

+ addPlace(place: Place): void

+ getId(): Integer
+ getTotalArea(): BigDecimal
+ getCommunalAreaAggregate(): BigDecimal
+ getAddress(): String
}



class Place {
- id: Integer
- area: BigDecimal
- hotWaterConnection: Boolean
- centralHeatingConnection: Boolean
- predictedHotWaterConsumption: BigDecimal

+ getId(): Integer
+ getArea(): BigDecimal
+ getHotWaterConnection(): Boolean
+ getCentralHeatingConnection(): Boolean
+ getPredictedHotWaterConsumption(): BigDecimal

+ setArea(area: BigDecimal): void
+ setHotWaterConnection(flag: Boolean): void
+ setCentralHeatingConnection(flag: Boolean): void
+ setPredictedHotWaterConsumption(predictedConsumption: BigDecimal): void
}

class HotWaterEntry {
- id: Integer
- date: LocalDate
- entryValue: BigDecimal

+ getId(): Integer
+ getDate(): LocalDate
+ getEntryValue(): BigDecimal

+ setEntryValue(date: LocalDate, value: BigDecimal): void
}


class MonthPayoff {
- id: Integer
- payoffDate: LocalDate
- waterHeatingUnitCost: BigDecimal
- centralHeatingUnitCost: BigDecimal
- hotWaterConsumption: BigDecimal

+ getId(): Integer
+ getPayoffDate(): LocalDate
+ getWaterHeatingUnitCost(): BigDecimal
+ getCentralHeatingUnitCost(): BigDecimal
+ getHotWaterConsumption(): BigDecimal
}



class AnnualBalance {
- id: Integer
- year: Integer
- totalHotWaterAdvance: BigDecimal
- totalHeatingPlaceAdvance: BigDecimal
- totalHeatingCommunalAreaAdvance: BigDecimal
- totalHotWaterCost: BigDecimal
- totalHeatingPlaceCost: BigDecimal
- totalHeatingCommunalAreaCost: BigDecimal

+ updateTotalAdvance(hotWater: BigDecimal, heatingPlace: BigDecimal, heatingCommunalArea: BigDecimal): void
+ updateTotalCost(hotWater: BigDecimal, heatingPlace: BigDecimal, heatingCommunalArea: BigDecimal): void

+ getId(): Integer
+ getYear(): Integer
+ getTotalHotWaterAdvance(): BigDecimal
+ getTotalHeatingPlaceAdvance(): BigDecimal
+ getTotalHeatingCommunalAreaAdvance(): BigDecimal
+ getTotalHotWaterCost(): BigDecimal
+ getTotalHeatingPlaceCost(): BigDecimal
+ getTotalHeatingCommunalAreaCost(): BigDecimal
}
  class HeatingPlaceAndCommunalAreaAdvance {
  - heatingPlaceAdvanceValue: BigDecimal
- heatingCommunalAreaAdvanceValue: BigDecimal
- advanceChangeFactor: Float

+ getHeatingPlaceAdvanceValue(): BigDecimal
+ getHeatingCommunalAreaAdvanceValue(): BigDecimal
+ getAdvanceChangeFactor(): Float
}

  class HotWaterAdvance {
- hotWaterAdvanceValue: BigDecimal

+ getHotWaterAdvanceValue(): BigDecimal
}

abstract class Advance {
# id: Integer
# date: LocalDate

+ getId(): Integer
+ getDate(): LocalDate
}

  abstract class Account {
# id: Integer
# email: String
# password: String
# isEnable: Boolean
# isActive: Boolean
# registerDate: LocalDateTime
#language: String

+ geId(): Integer
+ getEmail(): String
+ getPassword(): String
+ isEnable(): Boolean
+ isActive(): Boolean
+ getRegisterDate(): LocalDateTime
+ getRegisterDate(date: LocalDateTime): void
+ getLanguage(language: String): void
+ getLanguage(): String

+ setEmail(email: String): void
+ setPassword(password: String): void
+ resetPassword(): void
+ logOut(): void
}

  class Manager {
  - licenceId: String

+ getLicenceId(): String
+ editOwnerAccount(ownerId: Integer, name: String, surname: String, language: String): void
+ setOwnerAccountEnable(ownerId: Integer, enable: Boolean): void
+ editOwnerEmail(ownerId: Integer, email: String): void
+ editOwnerRole(ownerId: Integer, role: String): void
}

  class Owner {
- phoneNumber: String

+ getPhoneNumber(): String
+setPhoneNumber(phoneNumber: String): void
}

note right of HeatingPlaceAndCommunalAreaAdvance
advanceChangeFactor is inserted once per quarter
end note


note right of Building
communalAreaAggregate = totalArea - sum(Place.area)
end note
  
note left of Place
Place can have following types of connection:
  - hot water connection,
  - central heating connection,
  - hot water connection and central heating connection,
  - no connection.
end note

}
@enduml