@startuml
  top to bottom direction

  Owner "1" -- "many" HotWaterEntry
  Manager "1" -- "many" HotWaterEntry
  Manager "many" -- "1" HeatDistributionCentrePayoff
  Building "1" *-- "many" Place
  Place "1" -- "many" MonthPayoff
  Place "many" -- "1" Account
  Place "1" -- "many" Advance
  Place "1" -- "many" AnnualBalance
  Place "1" -- "many" HotWaterEntry
  Advance  <|--  HotWaterAdvance
  Advance <|--  HeatingPlaceAndCommunalAreaAdvance
  MonthPayoff "many" -- "1" Account
  PastQuarterHotWaterPayoff "1" -- "1" Place
  Account <|-- Owner
  Account <|-- Manager
  HeatDistributionCentre "1" -- "many" HeatDistributionCentrePayoff
  HeatDistributionCentre "1" o-- "many" Building
  Building "1" *-- "1" Address

class HeatDistributionCentre {
- id: Long
- version: Long

+ getId(): Long
+ getVersion(): Long

}

class HeatDistributionCentrePayoff {
- id: Long
- date: LocalDate
- consumption: BigDecimal
- consumptionCost: BigDecimal
- heatingAreaFactor: BigDecimal
- version: Long

+ getId(): Long
+ getDate(): LocalDate
+ getConsumption(): BigDecimal
+ getConsumptionCost(): BigDecimal
+ getHeatingAreaFactor(): BigDecimal
+ getVersion(): Long
}

  class PastQuarterHotWaterPayoff {
- id: Long
- averageConsumption: BigDecimal
- daysNumberInQuarter: Short
- version: Long

+ getId(): Long
+ getAverageConsumption(): BigDecimal
+ getDaysNumberInQuarter(): Short
+ getVersion(): Long

+ setAverageConsumption(consumption: BigDecimal): void
+ setDaysNumberInQuarter(daysNumber: Short): void
}

class Building {
- id: Long
- totalArea: BigDecimal
- communalAreaAggregate: BigDecimal
- version: Long

+ getId(): Long
+ getTotalArea(): BigDecimal
+ getCommunalAreaAggregate(): BigDecimal
+ getVersion(): Long

}

  class Address {
- id: Long
- street: String
- placeNumber: Short
- city: String
- postalCode: String
- version: Long

+ getId(): String
+ getStreet(): String
+ getPlaceNumber(): Short
+ getCity(): String
+ getPostalCode(): String
+ getVersion(): Long

}


class Place {
- id: Long
- area: BigDecimal
- hotWaterConnection: Boolean
- centralHeatingConnection: Boolean
- predictedHotWaterConsumption: BigDecimal
- version: Long

+ getId(): Long
+ getArea(): BigDecimal
+ getHotWaterConnection(): Boolean
+ getCentralHeatingConnection(): Boolean
+ getPredictedHotWaterConsumption(): BigDecimal
+ getVersion(): Long

+ setArea(area: BigDecimal): void
+ setHotWaterConnection(hotWaterConnection: Boolean): void
+ setCentralHeatingConnection(centralHeatingConnection: Boolean): void
+ setPredictedHotWaterConsumption(predictedHotWaterConsumption: BigDecimal): void
}

class HotWaterEntry {
- id: Long
- date: LocalDate
- entryValue: BigDecimal
- version: Long

+ getId(): Long
+ getDate(): LocalDate
+ getEntryValue(): BigDecimal
+ getVersion(): Long

+ setEntryValue(date: LocalDate, value: BigDecimal): void
}


class MonthPayoff {
- id: Long
- payoffDate: LocalDate
- waterHeatingUnitCost: BigDecimal
- centralHeatingUnitCost: BigDecimal
- hotWaterConsumption: BigDecimal
- version: Long

+ getId(): Long
+ getPayoffDate(): LocalDate
+ getWaterHeatingUnitCost(): BigDecimal
+ getCentralHeatingUnitCost(): BigDecimal
+ getHotWaterConsumption(): BigDecimal
+ getVersion(): Long
}



class AnnualBalance {
- id: Long
- year: Short
- totalHotWaterAdvance: BigDecimal
- totalHeatingPlaceAdvance: BigDecimal
- totalHeatingCommunalAreaAdvance: BigDecimal
- totalHotWaterCost: BigDecimal
- totalHeatingPlaceCost: BigDecimal
- totalHeatingCommunalAreaCost: BigDecimal
- version: Long

+ getId(): Long
+ getYear(): Short
+ getTotalHotWaterAdvance(): BigDecimal
+ getTotalHeatingPlaceAdvance(): BigDecimal
+ getTotalHeatingCommunalAreaAdvance(): BigDecimal
+ getTotalHotWaterCost(): BigDecimal
+ getTotalHeatingPlaceCost(): BigDecimal
+ getTotalHeatingCommunalAreaCost(): BigDecimal
+ getVersion(): Long

+ updateTotalAdvance(hotWater: BigDecimal, heatingPlace: BigDecimal, heatingCommunalArea: BigDecimal): void
+ updateTotalCost(hotWater: BigDecimal, heatingPlace: BigDecimal, heatingCommunalArea: BigDecimal): void

}
  class HeatingPlaceAndCommunalAreaAdvance {
- heatingPlaceAdvanceValue: BigDecimal
- heatingCommunalAreaAdvanceValue: BigDecimal
- advanceChangeFactor: BigDecimal

+ getHeatingPlaceAdvanceValue(): BigDecimal
+ getHeatingCommunalAreaAdvanceValue(): BigDecimal
+ getAdvanceChangeFactor(): BigDecimal

+ setAdvanceChangeFactor(advanceChangeFactor: BigDecimal): void
}

  class HotWaterAdvance {
- hotWaterAdvanceValue: BigDecimal

+ getHotWaterAdvanceValue(): BigDecimal
}

abstract class Advance {
# id: Long
# date: LocalDate
# version: Long

+ getId(): Long
+ getDate(): LocalDate
+ getVersion(): Long
}

  abstract class Account {
}

  class Manager {
}

  class Owner {
}

note left of Account
Implementation for classes: Account, Manager, Owner is placed in MOK class diagram
end note

note right of HeatingPlaceAndCommunalAreaAdvance
advanceChangeFactor is inserted once per quarter
end note


note right of Building
communalAreaAggregate = totalArea - sum(Place.area)
end note
  
note left of Place
Place can have following types of connection:
  - hot water connection,
  - central heating connection,
  - hot water connection and central heating connection,
  - no connection.
end note
  legend top
  All classes in MOW extend AbstractEntity. Implementation of AbstractEntity Class is placed in MOK
  end legend



@enduml