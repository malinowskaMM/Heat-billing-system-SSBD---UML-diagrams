@startuml
  
  Account "1" -- "many" HotWaterEntry
  Account -- Role
  Account -- HeatDistributionCentre
  Building "1" *-- "many" Place
  Building "many" --o "1" HeatDistributionCentre
  Place "1" -- "many" MonthPayoff
  Place "many" -- "1" Account
  Place "1" -- "many" Advance
  Place "1" o-- "many" AnnualBalance
  Place "1" o-- "many" HotWaterEntry
  Advance  -- "0..1" HotWaterAdvance
  Advance -- "1" HeatingPlaceAndCommunalAreaAdvance
  MonthPayoff -- Account
  PastQuarterHotWaterPayoff -- Place
  Account <|-- Owner
  Account <|-- Manager


class HeatDistributionCentre {
date: LocalDate
consumption: BigDecimal
consumptionCost: BigDecimal
heatingAreaFactor: BigDecimal
hotWaterFactorAggregate: BigDecimal
addBuilding(building: Building): void
}


class Building {
totalArea: BigDecimal
communalAreaAggregate: BigDecimal
address: String
hotWaterConnection: Boolean
centralHeatingConnection: Boolean
connectHotWater(flag: Boolean): void
connectCentralHeating(flag: Boolean): void
addPlace(place: Place): void
}


class Place {
area: BigDecimal
hotWaterConnection: Boolean
centralHeatingConnection: Boolean
predictedHotWaterConsumption: Float
updateArea(area: BigDecimal): void
}

class HotWaterEntry {
date: LocalDate
entryValue: BigDecimal
update(value: BigDecimal): void
}


class MonthPayoff {
payoffDate: LocalDate
disconnection: Boolean
waterHeatingUnitCost: BigDecimal
centralHeatingUnitCost: BigDecimal
hotWaterConsumption: BigDecimal
calculatePayoff(): BigDecimal
}

class Advance {
date: LocalDate
calculateTotalAdvance(): BigDecimal
}

class HotWaterAdvance {
hotWaterAdvanceValue: BigDecimal
calculateAdvance(): BigDecimal
}

class HeatingPlaceAndCommunalAreaAdvance {
heatingPlaceAdvanceValue: BigDecimal
heatingCommunalAreaAdvanceValue: BigDecimal
advanceChangeFactor: Float
calculateAdvance(): BigDecimal
}


class PastQuarterHotWaterPayoff {
averageConsumption: BigDecimal
daysNumberInQuarter: Integer
}

class AnnualBalance {
year: Integer
balanceHotWater: BigDecimal
balanceHeatingPlace: BigDecimal
balanceHeatingCommunalArea: BigDecimal
totalHotWaterCost: BigDecimal
totalHeatingPlaceCost: BigDecimal
totalHeatingCommunalAreaCost: BigDecimal
updateBalance(hotWater: BigDecimal, heatingPlace: BigDecimal, heatingCommunalArea: BigDecimal): void
updateTotalCost(hotWater: BigDecimal, heatingPlace: BigDecimal, heatingCommunalArea: BigDecimal): void
}

enum Role {
MANAGER
OWNER
}

 class Account {
id: String
username: String
password: String
name: String
surname: String
insertHotWaterEntry(value: BigDecimal): void
}

class Manager {

}

class Owner {

}

note left of HeatingPlaceAndCommunalAreaAdvance
advanceChangeFactor is inserted once per quarter
end note

note left of HeatDistributionCentre 
Monthly billing period
hotWaterFactorAggregate = 100% - heatingAreaFactor
end note

note right of Building
Building can have following types of connection:
  - hot water connection,
  - central heating connection,
  - hot water connection and central heating connection.
communalAreaAggregate = totalArea - sum(Place.area)
end note
  
note left of Place
Place can have following types of connection:
  - hot water connection,
  - central heating connection,
  - hot water connection and central heating connection,
  - no connection.
end note

@enduml